name: Build Container Image

on:
  workflow_call:
    inputs:
      containerfile:
        required: false
        description: Path to the container file
        default: Dockerfile
        type: string
      imagename:
        required: false
        description: Name of the container image
        type: string
      release_branch:
        required: false
        description: Name of the release branch
        default: main
        type: string
      enable_cosign:
        required: false
        description: Sign images using cosign
        default: true
        type: boolean
      enable_trivy:
        required: false
        description: Scan image for vulnerabilities using trivy
        default: true
        type: boolean
      push_ghcr:
        required: false
        description: Push image to ghcr
        default: true
        type: boolean
      push_dockerhub:
        required: false
        description: Push image to dockerhub
        default: false
        type: boolean
      push_quay:
        required: false
        description: Push image to quay
        default: false
        type: boolean

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
    
      - name: Set up docker
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3

      - name: Set up cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0
        if: ${{ inputs.enable_cosign }}

      - name: Determine version
        id: version
        uses: paulhatch/semantic-version@a8f8f59fd7f0625188492e945240f12d7ad2dca3 # v5.4.0
        with:
          tag_prefix: v
          major_pattern: '/^(feat|fix|docs|style|refactor|perf|test|chore)(\([a-z ]+\))?!: (.|\n)*$/'
          minor_pattern: '/^(feat)(\([a-z ]+\))?: (.|\n)*$/'
          bump_each_commit: true
          bump_each_commit_patch_pattern: '/^(fix|refactor|perf)(\([a-z ]+\))?: (.|\n)*$/'
          version_format: ${major}.${minor}.${patch}

      - name: Extract base image tag
        id: base
        run: |
          base=$(awk '/^FROM/ { image = $2 } END { print image }' ${{ inputs.containerfile }})
          base_tag_version=$(echo $base | sed 's/^[^:]*:\([^@]*\).*/\1/')
          base_tag_major=$(echo $base_tag_version | awk -F'.' ' { print $1 }')
          base_tag=$(echo $base_tag_version | awk -F'[0-9]' '{ print $1 }')
          echo "base_tag_version=$base_tag_version" >> $GITHUB_OUTPUT
          echo "base_tag_major=$base_tag_major" >> $GITHUB_OUTPUT
          echo "base_tag=$base_tag" >> $GITHUB_OUTPUT

      - name: Generate container metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          images: |
            name=ghcr.io/${{ inputs.imagename || github.repository }},enable=${{ inputs.push_ghcr }}
            name=${{ inputs.imagename || github.repository }},enable=${{ inputs.push_dockerhub }}
            name=quay.io/${{ inputs.imagename || github.repository }},enable=${{ inputs.push_quay }}
          tags: |
            type=semver,pattern={{major}},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}-${{ steps.base.outputs.base_tag_version }},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}-${{ steps.base.outputs.base_tag_version }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-${{ steps.base.outputs.base_tag_version }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}-${{ steps.base.outputs.base_tag_major }},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}-${{ steps.base.outputs.base_tag_major }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-${{ steps.base.outputs.base_tag_major }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}-${{ steps.base.outputs.base_tag }},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}-${{ steps.base.outputs.base_tag }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-${{ steps.base.outputs.base_tag }},value=${{ steps.version.outputs.version }}
          flavor: latest=auto

      - name: Login to ghcr
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ inputs.push_ghcr }}

      - name: Login to docker hub
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ inputs.push_dockerhub }}
  
      - name: Login to quay
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        if: ${{ inputs.push_quay }}

      - name: Tag and push image
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6
        with:
          push: true
          context: .
          file: ${{ inputs.containerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # 0.24.0
        with:
          ignore-unfixed: true
          image-ref: ${{ inputs.imagename || github.repository }}:latest
          format: sarif
          output: trivy-results.sarif
        if: ${{ inputs.enable_trivy }}
  
      - name: Generate sbom dependency graph
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # 0.24.0
        with:
          ignore-unfixed: true
          image-ref: ${{ inputs.imagename || github.repository }}:latest
          format: github
          output: dependency-results.sbom.json
          github-pat: ${{ secrets.GITHUB_TOKEN }} 
        if: ${{ inputs.enable_trivy }}

      - name: Upload scan to security tab
        uses: github/codeql-action/upload-sarif@2d790406f505036ef40ecba973cc774a50395aac # v3
        with:
          sarif_file: trivy-results.sarif
        if: ${{ inputs.enable_trivy }}

      - name: Sign container image
        run: |
          cosign sign --recursive --yes --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ inputs.imagename || github.repository }}:latest
          cosign sign --recursive --yes --key env://COSIGN_PRIVATE_KEY quay.io/${{ inputs.imagename || github.repository }}:latest
          cosign sign --recursive --yes --key env://COSIGN_PRIVATE_KEY ${{ inputs.imagename || github.repository }}:latest
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        if: ${{ inputs.enable_cosign }}

      - name: Update readme on docker hub
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ inputs.imagename || github.repository }}

      - name: Create release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          name: v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          prerelease: false
          generate_release_notes: true
